{"ast":null,"code":"var _jsxFileName = \"/Users/ilan/Training/shoppingcart/src/components/ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  // Define State of the Cart and the list of products available\n  const [productList, setProductList] = useState([]);\n  const [cart, setCart] = useState([]);\n  const prevCart = useRef(cart);\n\n  // Fetch the list of products from the API\n  useEffect(() => {\n    axios.get('https://fakestoreapi.com/products').then(response => {\n      setProductList(response.data);\n    });\n  }, []);\n\n  // Refresh methods\n\n  // Restore the cart if a cart exists in localstorage\n  useEffect(() => {\n    const storedCart = localStorage.getItem('cart') || [];\n    if (storedCart) {\n      setCart(JSON.parse(storedCart));\n    }\n  }, []);\n\n  // Save the cart in localstorage everytime cart is modified\n  useEffect(() => {\n    if (prevCart.current !== cart) {\n      window.localStorage.setItem('cart', JSON.stringify(cart));\n      prevCart.current = cart;\n    }\n    cart.map(product => document.getElementById(product.id).value = product.quantity);\n  }, [cart]);\n\n  // Cart\n\n  // Function that update the cart when input is modified\n  const updateCart = event => {\n    const id = Number(event.target.id);\n    const quantity = Number(event.target.value);\n    const foundProduct = productList.find(product => product.id === id);\n    const itemAlreadyInCart = cart.find(product => product.id === id);\n\n    // Define object to store in the cart\n    const productToAdd = {\n      id: foundProduct.id,\n      price: foundProduct.price,\n      title: foundProduct.title,\n      quantity: quantity\n    };\n\n    // Add item to the cart (if), or modify quantity (else), or remove from \n    // the cart if quantity is 0 (filter)\n    if (!itemAlreadyInCart) {\n      setCart(cart => [...cart, productToAdd]);\n    } else {\n      setCart(cart => cart.map(product => {\n        if (product.id === id) {\n          return {\n            ...product,\n            quantity: quantity\n          };\n        }\n        return product;\n      }).filter(product => product.quantity !== 0));\n    }\n  };\n\n  // Function that remove an element from the cart and reset the input to 0\n  const removeFromCart = id => {\n    setCart(cart.filter(product => product.id !== id));\n    document.getElementById(id).value = 0;\n  };\n\n  // calculate the total price of the products in the cart\n  //const totalPrice = cart.reduce((acc, product) => acc + product.price * product.quantity, 0);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shopping-cart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products\",\n      children: productList.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image,\n          alt: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: product.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"$\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: product.id,\n            type: \"number\",\n            min: \"0\",\n            max: \"10\",\n            onChange: event => updateCart(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cart Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), cart.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [product.title, \" - \", product.quantity, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeFromCart(product.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)), \"Shipping: $5\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), \"Price: $\", 0]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductList, \"yqIq0KUC+2Eo3GndXVhHvh6kZBE=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","ProductList","productList","setProductList","cart","setCart","prevCart","get","then","response","data","storedCart","localStorage","getItem","JSON","parse","current","window","setItem","stringify","map","product","document","getElementById","id","value","quantity","updateCart","event","Number","target","foundProduct","find","itemAlreadyInCart","productToAdd","price","title","filter","removeFromCart","image","name"],"sources":["/Users/ilan/Training/shoppingcart/src/components/ProductList.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\n\nconst ProductList = () => {\n    // Define State of the Cart and the list of products available\n    const [productList, setProductList] = useState([])\n    const [cart, setCart] = useState([])\n    const prevCart = useRef(cart);\n\n\n    // Fetch the list of products from the API\n    useEffect(() => {\n        axios.get('https://fakestoreapi.com/products')\n            .then(response => {\n                setProductList(response.data);\n            })\n    }, [])\n\n    // Refresh methods\n\n    // Restore the cart if a cart exists in localstorage\n    useEffect(() => {\n        const storedCart = localStorage.getItem('cart') || []\n        if (storedCart) {\n          setCart(JSON.parse(storedCart))\n        }\n      }, [])\n\n      // Save the cart in localstorage everytime cart is modified\n      useEffect(() => {\n        if (prevCart.current !== cart) {\n            window.localStorage.setItem('cart', JSON.stringify(cart))\n            prevCart.current = cart\n          }\n          cart.map(product => document.getElementById(product.id).value = product.quantity)\n\n      }, [cart])\n\n\n    // Cart\n\n    // Function that update the cart when input is modified\n    const updateCart = (event) => {\n        const id = Number(event.target.id)\n        const quantity = Number(event.target.value)\n        const foundProduct = productList.find(product => product.id === id)\n        const itemAlreadyInCart = cart.find(product => product.id === id)\n  \n        // Define object to store in the cart\n        const productToAdd = {\n            id: foundProduct.id,\n            price: foundProduct.price,\n            title: foundProduct.title,\n            quantity: quantity\n        }\n\n        // Add item to the cart (if), or modify quantity (else), or remove from \n        // the cart if quantity is 0 (filter)\n        if (!itemAlreadyInCart) {\n            setCart(cart => [...cart, productToAdd])\n        } else {\n            setCart(cart => cart.map(product => {\n                if (product.id === id) {\n                    return {\n                        ...product,\n                        quantity: quantity\n                    }\n                }\n                return product\n            }).filter(product => product.quantity !== 0))\n        }\n    }\n\n    // Function that remove an element from the cart and reset the input to 0\n    const removeFromCart = (id) => {\n        setCart(cart.filter(product => product.id !== id))\n        document.getElementById(id).value = 0\n    }\n\n    // calculate the total price of the products in the cart\n    //const totalPrice = cart.reduce((acc, product) => acc + product.price * product.quantity, 0);\n\n    return (\n        <div className=\"shopping-cart\">\n            <div className=\"products\">\n                {productList.map(product => (\n                    <div key={product.id} className=\"card\">\n                        <img src={product.image} alt={product.name} />\n                        <div class=\"container\">\n                            <h4>{product.title}</h4>\n                            <div>${product.price}</div>\n                            <input id={product.id} type=\"number\" min=\"0\" max=\"10\" onChange={(event) => updateCart(event)}></input>\n                        </div>\n                    </div>\n                ))}\n            </div>\n            <div className=\"cart-summary\">\n                <h2>Cart Summary</h2>\n                {cart.map(product => (\n                    <div key={product.id}>\n                        {product.title} - {product.quantity}\n                        <button onClick={() => removeFromCart(product.id)}>Remove</button>\n                    </div>\n                ))}\n                Shipping: $5\n                <br />\n                Price: ${0}\n            </div>\n        </div>\n    )\n}\n\nexport default ProductList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}